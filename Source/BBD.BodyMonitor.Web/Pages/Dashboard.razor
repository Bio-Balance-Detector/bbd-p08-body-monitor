@page "/"
@page "/dashboard"
@using BBD.BodyMonitor.Environment;
@using BBD.BodyMonitor.Sessions;
@using BBD.BodyMonitor.Web.Data
@inject BioBalanceDetectorService BBDService

<PageTitle>Dashboard</PageTitle>

<h1>System Information</h1>

@*show the current status of the BBD service*@
@if (BioBalanceDetectorService.SystemInformation == null)
{
    <p><em>Connecting to a Bio Balance Detector service...</em></p>
}
else
{
    <p>
        Host: @BioBalanceDetectorService.SystemInformation.CPUName with @BioBalanceDetectorService.SystemInformation.RAMSize GB RAM<br />
        Active Sessions: @BioBalanceDetectorService.SystemInformation.Sessions.Count()<br />

        <div class="list-group list-custom-small list-icon-0">
            <a data-bs-toggle="collapse" href="#collapse-location" class="collapsed" aria-expanded="false">
                <i class="fa font-14 fa-location-dot color-red-dark"></i>
                <span class="font-14">Location: @GetSelectedLocationName()</span>
                <i class="fa fa-angle-down"></i>
            </a>
        </div>
        <div class="collapse" id="collapse-location" style="">
            <div class="list-group list-custom-small ms-4 ps-2">
                @foreach (var location in BioBalanceDetectorService.SystemInformation.Locations)
                {
                    <a id="@location.Id" href="#">
                        <span class="font-400 opacity-70">@location.Name</span>
                        <i class="fa fa-angle-right"></i>
                    </a>
                }
            </div>
        </div>

        <div class="list-group list-custom-small list-icon-0">
            <a data-bs-toggle="collapse" href="#collapse-subject" class="collapsed" aria-expanded="false">
                <i class="fa font-14 fa-duotone fa-users color-blue-dark"></i>
                <span class="font-14">Subject: @GetSelectedSubjectName()</span>
                <i class="fa fa-angle-down"></i>
            </a>
        </div>
        <div class="collapse" id="collapse-subject" style="">
            <div class="list-group list-custom-small ms-4 ps-2">
                @foreach (var subject in BioBalanceDetectorService.SystemInformation.Subjects)
                {
                    <a id="@subject.Id" href="#">
                        <span class="font-400 opacity-70">@subject.Name</span>
                        <i class="fa fa-angle-right"></i>
                    </a>
                }
            </div>
        </div>

        <div class="list-group list-custom-small list-icon-0">
            <a data-bs-toggle="collapse" href="#collapse-device" class="collapsed" aria-expanded="false">
                <i class="fa font-14 fa-microchip color-blue-dark"></i>
                <span class="font-14">Device: @GetSelectedDeviceName()</span>
                <i class="fa fa-angle-down"></i>
            </a>
        </div>
        <div class="collapse" id="collapse-device" style="">
            <div class="list-group list-custom-small ms-4 ps-2">
                @foreach (var device in BioBalanceDetectorService.SystemInformation.Devices)
                {
                    <a id="@device.Id" href="#">
                        <i class="fa-solid @(device.IsOpened ? "fa-triangle-exclamation color-yelow-dark" : "fa-circle-check color-green-dark")"></i>
                        <span class="flex-fill font-400 opacity-70">@device.Brand @device.Name (@device.SerialNumber)</span>
                        <i class="fa fa-angle-right"></i>
                    </a>
                }
            </div>
        </div>

        @*add a button to start the data aquistion*@
        <a @onclick="Start" class="flex-fill p-2 btn btn-s btn-full mb-3 rounded-xs text-uppercase font-900 shadow-s bg-green-dark">Start</a>

        @*add a button to stop the data aquistion*@
        <a @onclick="Stop" class="flex-fill p-2 btn btn-s btn-full mb-3 rounded-xs text-uppercase font-900 shadow-s bg-gray-dark no-click">Stop</a>
    </p>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        BBDService.StreamSystemInformationAsync(new CancellationToken());

        Timer timer = new Timer((state) =>
        {
            // Get the system information from the BBD service
            //BBDService.StreamSystemInformationAsync(new CancellationToken());
            //systemInformation = BBDService.GetSystemInformationAsync().Result;

            // Invoke the StateHasChanged method to update the Blazor page
            InvokeAsync(StateHasChanged);
        }, null, 0, 500);
    }

    protected void Start() => BBDService.Start();

    protected void Stop() => BBDService.Stop();

    protected String GetSelectedLocationName()
    {
        var config = BBDService.GetConfigAsync().Result;

        Location? location = BioBalanceDetectorService.SystemInformation?.Locations.FirstOrDefault(l => l.Alias == config?.LocationAlias);

        return location?.Name ?? "N/A";
    }

    protected String GetSelectedSubjectName()
    {
        var config = BBDService.GetConfigAsync().Result;

        Subject? subject = BioBalanceDetectorService.SystemInformation?.Subjects.FirstOrDefault(s => s.Alias == config?.SubjectAlias);

        return subject?.Name ?? "N/A";
    }

    protected String GetSelectedDeviceName()
    {
        var config = BBDService.GetConfigAsync().Result;

        ConnectedDevice? device = BioBalanceDetectorService.SystemInformation?.Devices.FirstOrDefault(d => d.SerialNumber == config?.DeviceSerialNumber);

        return ($"{device.Brand} {device?.Name} ({device?.SerialNumber})") ?? "N/A";
    }
}
