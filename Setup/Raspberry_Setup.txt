# https://behroozbc.hashnode.dev/install-net-on-a-raspberry-pi

sudo apt update
sudo apt install wget

$ wget https://dot.net/v1/dotnet-install.sh

sudo bash ./dotnet-install.sh --channel STS --install-dir /opt/dotnet/

sudo ln -s /opt/dotnet/dotnet /usr/local/bin

echo 'export DOTNET_ROOT=/opt/dotnet' >> /home/pi/.bashrc

dotnet --info


x, Clone the repo on the Raspberry
cd ~/Work/BioBalanceDetector
git clone https://github.com/andrasfuchs/BioBalanceDetector.git

x, Update the repo on the Raspberry
cd ~/Work/BioBalanceDetector
git pull

x, Build the .NET source code on the Raspberry
cd ~/Work/BioBalanceDetector/Software/Source/BBDProto08/BBD.SleepLogger
dotnet build

x, Publish the .NET app on the Raspberry
cd ~/Work/BioBalanceDetector/Software/Source/BBDProto08/BBD.SleepLogger
dotnet publish --configuration release --runtime linux-arm --self-contained true --output ~/Work/BBD.SleepLogger

x, Run the .NET app on the Raspberry
cd ~/Work/BBD.SleepLogger
./BBD.SleepLogger

x, Configure the .NET 5 app to run as background services
sudo apt-get install supervisor

sudo nano /etc/supervisor/supervisord.conf
# change chmod=0700 to chmod=0766 @ line 5

sudo nano /etc/supervisor/conf.d/bbd.conf

[group:bbd]
programs=SleepLogger

[program:SleepLogger]
directory=/home/pi/Work/BBD.SleepLogger
command=/home/pi/Work/BBD.SleepLogger/BBD.SleepLogger
autostart=true
autorestart=true
stderr_logfile=/var/log/BBD.SleepLogger.err.log
stdout_logfile=/var/log/BBD.SleepLogger.out.log
user=pi
environment=HOME="/home/pi",USER="pi"
stopsignal=INT
stopasgroup=false


sudo service supervisor restart

supervisorctl status all
supervisorctl stop bbd:
supervisorctl start bbd:

x, Open the TCP port 7061 on Raspberry Pi
sudo iptables -A INPUT -p tcp --dport 7061 -j ACCEPT

x, Trust ASP.NET Core developer certificate (https://aka.ms/aspnet/https-trust-dev-cert)
# https://learn.microsoft.com/en-us/aspnet/core/security/enforcing-ssl?view=aspnetcore-7.0&tabs=visual-studio%2Clinux-ubuntu#trust-https-certificate-on-linux

dotnet dev-certs https
sudo -E dotnet dev-certs https -ep /usr/local/share/ca-certificates/aspnet/https.crt --format PEM
sudo update-ca-certificates

dotnet dev-certs https --clean
dotnet dev-certs https --trust

# verify (SHA1 thumbprints must match)
ls -la ~/.dotnet/corefx/cryptography/x509stores/my

openssl x509 -noout -fingerprint -sha1 -inform pem -in /usr/local/share/ca-certificates/aspnet/https.crt

x, Install Remote Debugger on Raspberry
curl -sSSL https://aka.ms/getvsdbgsh | /bin/sh /dev/stdin -v latest -l ~/vsdbg

# rename the folder from vsdbg to .vs-debugger
